//1
alert( ['x'] == 'x' );//потому что сначала ['x'] приведется к 'x' и результаты получатся одинаковыми
//2
var foo = {
    toString: function() {
      return 'foo';
    },
    valueOf: function() {
      return 2;
    }
  };
  
  alert( foo );//выведется результат метода toString
  alert( foo + 1 );//выведется резульат valueOf
  alert( foo + "3" );//выведется резульат valueOf а затем приобразуется в строку при сложении и будет 23
  //3
alert( [] == [] );//это 2 разных объекта и они не равны
alert( [] == ![] );//идет преобразования к логическому типу данных
//правая часть станет false, так как идет отрицание объекта а объект всегда true при приведении к лог. типу
//левая часть сначала преобразуется в примитив, а он пустой а потом к лог типу данных, результат будет false
//соответственно результат сравнения будет true
//4
/*new Date(0) - 0 = 0 так как преобразуется дата в число, и это будет 0
new Array(1)[0] + ""=undefined первый элемент массива не определен
({})[0] = undefined // создание пустого объекта и у него нет свойства 0
[1] + 1 = 11 //массив преобразуется в строку, отсюда результат будет 11
[1,2] + [3,4] =1,23,4 //массивы приводятся к строке и складываются
[] + null + 1 = "null1" массив преобразуется в пустую строку и все сложения преобразуют операнды к строке
[[0]][0][0]=0 //создаем вложенный массив и берем от него нулевой элемент
({} + {}) = "[object Object][object Object]" //сложение преобразует объекты к строке так как нет подходящего valueOf*/
//4
function sum(a) {

    var currentSum = a;
  
    function f(b) {
      currentSum += b;
      return f;
    }
  
    f.toString = function() {
      return currentSum;
    };
  
    return f;
  }
  
  alert( sum(1)(2) );
  alert( sum(5)(-1)(2) );
  alert( sum(6)(-1)(-2)(-3) );
  alert( sum(0)(1)(2)(3)(4)(5) );